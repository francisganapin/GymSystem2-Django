# Generated by Django 4.2 on 2025-02-04 16:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="GymEquipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("stock", models.IntegerField()),
                (
                    "picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="equipment-picture/"
                    ),
                ),
            ],
            options={
                "db_table": "gym_equipment_record",
            },
        ),
        migrations.CreateModel(
            name="GymMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_card", models.CharField(max_length=50, unique=True)),
                ("expiry", models.DateField()),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "gender",
                    models.CharField(
                        choices=[("Male", "Male"), ("Female", "Female")], max_length=10
                    ),
                ),
                ("phone_number", models.CharField(max_length=15)),
                ("address", models.TextField()),
                ("join_date", models.DateField(auto_now_add=True)),
                ("renewed", models.BooleanField(default=False)),
                ("profile_image", models.ImageField(upload_to="images/")),
            ],
            options={
                "db_table": "gym_members",
            },
        ),
        migrations.CreateModel(
            name="ProductItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("stock", models.IntegerField()),
                ("expiration", models.DateField()),
                ("description", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "product_table",
            },
        ),
        migrations.CreateModel(
            name="SettingColorTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("value", models.CharField(max_length=100)),
                ("active", models.BooleanField()),
            ],
            options={
                "db_table": "setting_color_table",
            },
        ),
        migrations.CreateModel(
            name="SettingFontTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("value", models.CharField(max_length=100)),
                ("active", models.BooleanField()),
            ],
            options={
                "db_table": "setting_font_table",
            },
        ),
        migrations.CreateModel(
            name="LoginRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_card", models.CharField(max_length=100)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("login_time", models.CharField(max_length=100)),
                ("login_date", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "gym_login_record",
                "unique_together": {("id_card", "login_date")},
            },
        ),
        migrations.CreateModel(
            name="GymSale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_card", models.CharField(max_length=20)),
                ("sale_date", models.DateField()),
                ("payment_method", models.CharField(max_length=100)),
                ("sale_price", models.IntegerField()),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="function_gym.productitem",
                    ),
                ),
            ],
            options={
                "db_table": "sale_table",
            },
        ),
    ]
